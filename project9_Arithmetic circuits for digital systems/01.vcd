$date
	Thu May 19 18:03:36 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb $end
$var wire 5 ! data [4:0] $end
$var reg 4 " A [3:0] $end
$var reg 4 # B [3:0] $end
$scope module c1 $end
$var wire 1 $ Cout $end
$var wire 8 % sw [7:0] $end
$var wire 5 & data [4:0] $end
$var wire 4 ' Sum [3:0] $end
$var wire 4 ( P [3:0] $end
$var wire 4 ) G [3:0] $end
$var wire 4 * Cin [3:0] $end
$scope module f1 $end
$var wire 1 + A $end
$var wire 1 , B $end
$var wire 1 - Cin $end
$var wire 1 . Cout $end
$var wire 1 / G $end
$var wire 1 0 P $end
$var wire 1 1 Sum $end
$upscope $end
$scope module f2 $end
$var wire 1 2 A $end
$var wire 1 3 B $end
$var wire 1 4 Cin $end
$var wire 1 5 Cout $end
$var wire 1 6 G $end
$var wire 1 7 P $end
$var wire 1 8 Sum $end
$upscope $end
$scope module f3 $end
$var wire 1 9 A $end
$var wire 1 : B $end
$var wire 1 ; Cin $end
$var wire 1 < Cout $end
$var wire 1 = G $end
$var wire 1 > P $end
$var wire 1 ? Sum $end
$upscope $end
$scope module f4 $end
$var wire 1 @ A $end
$var wire 1 A B $end
$var wire 1 B Cin $end
$var wire 1 C Cout $end
$var wire 1 D G $end
$var wire 1 E P $end
$var wire 1 F Sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
b0 *
b0 )
b0 (
b0 '
b0 &
b0 %
0$
b0 #
b0 "
b0 !
$end
#10000
1?
1;
b100 *
15
b1100 !
b1100 &
b1100 '
1F
17
b10 )
16
b1010 (
1E
12
13
1A
b10 #
b10100010 %
b1010 "
#20000
0;
b0 *
0<
11
18
05
1?
b111 !
b111 &
b111 '
0F
10
b0 )
06
1>
b111 (
0E
1,
03
1:
0A
b1010010 %
b101 "
#30000
1F
1B
1$
1;
14
b1110 *
01
1.
1?
1<
b11110 !
b11110 &
b1110 '
18
15
1C
1/
1=
16
b1111 (
1E
b1111 )
1D
1+
19
1@
13
1A
b1111 #
b11111111 %
b1111 "
#40000
0F
0;
0B
0$
04
b0 *
11
0.
18
05
b111 !
b111 &
b111 '
1?
0<
0C
0/
06
0=
b111 (
0E
b0 )
0D
0+
02
09
0@
0A
b0 #
b1110000 %
b111 "
#50000
1F
1<
1B
0?
1;
b1100 *
b1001 !
b1001 &
b1001 '
08
15
b10 )
16
12
19
0:
b110 #
b110110 %
b11 "
#60000
